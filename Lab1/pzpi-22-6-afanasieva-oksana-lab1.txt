Міністерство освіти і науки України
Харківський національний  університет радіоелектроніки

Кафедра програмної інженерії


ЗВІТ
з лабораторної роботи №1
з дисципліни «Архітектура програмного забезпечення»
на тему: «Розробка Vision & scope»

Виконала:	
ст. гр. ПЗПІ-22-6	
Афанасьєва О.М.	

Перевірив:
ст. викл. каф. ПІ
Сокорчук І.П.

Харків 2025
1 ІСТОРІЯ ЗМІН
Таблиця 1 – Історія змін 
№	Дата	Версія звіту	Опис змін та виправлень
1	27.04.2025	0.1	Створено розділ «Історія змін»
2	27.04.2025	0.1	Створено розділ «Завдання»
3	27.04.2025	0.1	Додано початкову версію Vision and scope
4	28.04.2025	0.1	Внесено зміни у Vision and scope до пунктів 2.2, 3.1 та 3.2
5	28.04.2025	0.1	У Vision and scope додано пункт 3.3
6	28.04.2025	0.1	Створено розділ «Опис виконаної роботи»
7	28.04.2025	0.1	Створено розділ «Висновки»
8	29.04.2025	0.1	Додано посилання на відеозапис та хронологічний опис доповіді у додаток А

2 ЗАВДАННЯ
Розділ 1: Описати актуальність проблем, які вирішує програмна система.   Описати інші аналогічні рішення, що вирішують ту ж саму проблему, або використовують ті ж самі методи вирішення завдань. 
Розділ 2: Описати призначення системи, вказати її головні функціональні  можливості. 
Розділ 3: Докладно описати функції кожної з частин системи та вимоги до цих  частин. 
Розділ 4: Вказати усі технології, які будуть використані у проєкті.
 
3 ОПИС ВИКОНАНОЇ РОБОТИ
Внесено зміни у документ Vision and Scope згідно з вимогами та наведено його у додатку Б. Було додано функціонал адміністрування, внесено зміни щодо функціоналу, що буде присутній в першій версії проєкту, додано функціонал, що може увійти в майбутні релізи, а також було розглянуто неочевидні обмеження.

4 ВИСНОВКИ
Під час виконання лабораторної роботи було розроблено документ Vision & Scope, в якому було описано проблеми, що вирішує програмна система, призначення системи, функції кожної з частин системи та технології, які будуть використані у проєкті.
 
ДОДАТОК А
Відеозапис та хронологічний опис

Відеозапис доповіді на YouTube: https://youtu.be/xTvdmxpwG4s
Хронологічний опис відеозапису:
00:00 – Вступ
00:17 – Передумови
01:06 – Бізнес-можливості
02:41 – Окреслення концепції
03:03 – Головна функціональність
05:53 – Рамки первинного випуску
09:43 – Рамки наступних випусків
10:32 – Обмеження та винятки
11:29 – Робоче середовище

ДОДАТОК Б
Vision & Scope

Vision and Scope Document
for
Програмна система для автоматизації процесу сортування сміття
Version 2.0 approved
Prepared by ст. гр. ПЗПІ-22-6 
Афанасьєвою Оксаною
28.04.2025
 
Table of Contents
Table of Contents	8
Revision History	8
1 BUSINESS REQUIREMENTS	9
1.1. Background	9
1.2. Business Opportunity	9
2 VISION OF THE SOLUTION	10
2.1. Vision Statement	10
2.2. Major Features	10
3 SCOPE AND LIMITATIONS	12
3.1. Scope of Initial Release	12
3.2. Scope of Subsequent Releases	15
3.3 Limitation and Exclusions	16
4 BUSINESS CONTEXT	17
4.3. Operating Environment	17

Revision History
Name	Date	Reason For Changes	Version
Оксана Афанасьєва	17.11.2024		1.0
Оксана Афанасьєва	28.04.2025	Внесено зміни до пункту 2.2, 3.1, 3.2 та додано пункт 3.3	2.0

1 BUSINESS REQUIREMENTS
1.1. Background
Сортування сміття є однією з головних екологічних задач нашого часу, адже неправильна утилізація відходів спричиняє значну шкоду навколишньому середовищу, знижуючи якість життя та збільшуючи ризики для здоров’я людей. Багато країн впроваджують програму сортування сміття, проте існують проблеми з їх ефективністю. Низька обізнаність людей щодо правил сортування ускладнює процес переробки. Відсутність автоматизації процесів створює затримки та знижує ефективність збору й утилізації відходів.
Програмна система пропонує вирішення цих проблем шляхом інтеграції сучасних технологій, які забезпечать автоматизації моніторингу стану контейнерів, сортування сміття та оптимізацію процесу вивозу сміття, а також підвищення обізнаності населення щодо правил сортування через інтерактивні інформаційні платформи.

1.2. Business Opportunity
Сфера управління відходами швидко зростає завдяки глобальній екологічній кризі. Тому вже існує декілька рішень, що допомагають з даною проблемою. Прикладами таких рішень є RecycleSmart та Bigbelly. 
RecycleSmart це мобільний застосунок, що містить рекомендації щодо сортування сміття. Його перевагами є простота у використанні, користь для приватних користувачів та освітня функція, що підвищує обізнаність про сортування відходів. Проте він також містить недоліки, такі як: відсутність інтеграції з фізичними контейнерами, через що обмежена користь для муніципалітетів та організацій, які займаються вивезенням сміття.
Bigbelly це контейнери з автоматичним ущільненням сміття, що можуть надсилати повідомлення про необхідність очищення. Перевагою таких контейнерів є зменшення частоти вивозу сміття та ефективне використання ресурсів через автоматичне сповіщення про заповнення контейнера. Недоліками є висока вартість придбання та обслуговування, обмежений функціонал, такий як взаємодія з користувачами та надання інформації про сортування сміття.
Перевагою запропонованої програмної системи є те, що аналоги зазвичай пропонують або мобільний застосунок, або сенсори. В той час як даний продукт об’єднуватиме обидві складові в додачу з веб-застосунком. 
Продукт надаватиме можливість користувачам переглядати наявні контейнери для виносу сміття поруч з їх місцезнаходженням та дізнаватися інформацію щодо правильного сортування. Сенсори надаватимуть можливість відслідковування станів контейнерів та їх заповнення, для підвищення ефективності збору відходів.

2 VISION OF THE SOLUTION
2.1. Vision Statement
Програмна система надасть інтегроване рішення для автоматизації моніторингу стану контейнерів із відходами, надання інформації щодо сортування сміття та найближчих наявних контейнерів.
Система дозволить муніципалітетам та компаніям оптимізувати процес вивезення сміття, а мешканцям – дізнатися більше інформації щодо правильного сортування сміття та місцезнаходження контейнерів.

2.2. Major Features
MF-1 Перегляд інформації про місцезнаходження найближчих контейнерів.
-	Користувачі можуть переглядати список контейнерів для вивезення сміття, що знаходиться поблизу їх поточного місцезнаходження. Для цього система використовуватиме GPS-дані, щоб надавати точні координати контейнерів, а також відображати їх тип та статус заповнення.
MF-2 Перегляд інформації щодо правил сортування сміття.
-	Система надає користувачам інструкції щодо правильного сортування сміття. Правила подані в зрозумілому форматі з можливістю перегляду текстових та графічних пояснень, що підвищує обізнаність і спрощує процес сортування.
MF-3 Фільтрація інформації про сортування за типом сміття
-	Користувачі можуть фільтрувати правила сортування відповідно до категорій відходів, таких як пластик, скло, метал, органічні відходити тощо. Це дозволяє швидко знайти необхідну інформацію без перегляду загальних правил.
MF-4 Пошук правил сортування за назвою.
-	Система забезпечує можливість пошуку правил сортування за ключовими словами або назвою предмета. До прикладу, користувач може ввести «пляшка», і система покаже правило, в якому вказано як правильно її утилізувати.
MF-5 Моніторинг стану контейнерів – перегляд рівня заповнення, вологості та температури в ньому.
-	Система відображає рівень заповнення контейнерів, їхню температуру та вологість. Ці дані збираються за допомогою IoT-сенсорів і дозволяють користувачам уникнути перевантажених чи непридатних контейнерів.
MF-6 Сповіщення про заповнення контейнеру.
-	Адміністратори отримують автоматичні сповіщення, коли контейнер заповнений та потребує очищення. Це допомагає оптимізувати маршрути вивозу сміття.
MF-7 Фільтрація контейнерів за типом відходів.
-	Система дозволяє фільтрувати контейнери за типом відходів, таких як скло, пластик та органічні. Це зручний інструмент для користувачів, які сортують сміття та хочуть знайти необхідний контейнер поблизу.
MF-8 Пошук контейнерів за адресою
-	Користувачі можуть здійснювати пошук контейнерів за конкретною адресою. Це особливо корисно для мешканців великих міст, де контейнери розташовані на великій відстані один від одного.
MF-9 Адміністрування
У системі передбачено декілька типів адміністраторів з розмежованими правами доступу:
-	Адміністратори системи відповідає за загальні налаштування програмної системи, моніторинг її роботи, а також за реєстрацію користувачів і адміністраторів.
-	Адміністратор бізнес-логіки: має повний доступ до управління контейнерами та сенсорами. Він також має доступ до сповіщень про критичний стан контейнерів. Також він здійснює редагування, додавання та видалення правил сортування сміття, включаючи графічні та текстові інструкції.
-	Системний адміністратор резервного копіювання: має доступ виключно до функцій збереження, відновлення та міграції даних. Він не має можливості обробляти персональні дані або змінювати налаштування системи.

3 SCOPE AND LIMITATIONS
3.1. Scope of Initial Release
До першої версії продукту увійдуть основні функції серверної частини, IoT клієнт для підтримки основних завдань системи, веб-клієнт та мобільний клієнт.
3.1.1	Серверна частина
Сервер виконує основну роль у зборі, обробці та зберіганні даних, а також у забезпеченні бізнес-логіки системи. У першій версії будуть реалізовані наступні функції:
-	Отримання та обробка даних від сенсорів. Сервер буде отримувати дані від IoT сенсорів, що вимірюють рівень заповнення контейнерів, температуру та вологість.
-	Зберігання та аналіз даних. Зібрані дані будуть зберігатися в базі даних для подальшого аналізу.
-	Генерація звітів. На основі зібраних даних система буде створювати звіти про стан контейнерів.
-	Адміністрування: сервер забезпечує доступ до адміністративних функцій, включаючи: додавання, редагування та видалення контейнерів, керування правилами сортування сміття, створення облікових записів користувачів та адміністраторів, реєстрацію та моніторинг стану сенсорів, збереження, відновлення та міграція даних.
Буде також реалізовано такі аспекти бізнес-логіки:
-	Оцінка стану контейнерів. Сервер оброблятиме дані та класифікуватиме контейнери за їх станом. Якщо контейнер ще не заповнений, тобто рівень заповнення менше 80%, то стан контейнеру нормальний, а інакше – критичний.
-	Обчислення вологості контейнера. Сервер виконує обчислення для перетворення абсолютної вологості у відносну вологість за допомогою формули relativeHumidity = (absoluteHumidity × 100%) / maxAbsoluteHumidity;
-	Динамічний аналіз температури та вологості. Якщо температура всередині контейнера перевищує 50°C, система позначає контейнер як потенційно небезпечний. При вологості понад 90% сервер надсилає сповіщення про можливий витік чи інші проблеми.
3.1.2	IoT-клієнт
IoT-клієнт відповідає за інтеграцію з сенсорами, встановленими на контейнерах. Основні функції IoT-клієнта це:
-	Моніторинг стану контейнера. Збір даних із сенсорів про рівень заповнення, температуру та вологість контейнера.
-	Передача даних на сервер. Сенсори передають зібрані дані до серверної частини для обробки та зберігання.
Бізнес-логіка IoT-клієнта забезпечує попередню обробку даних перед їх передачею на сервер:
-	Збір та нормалізація даних із сенсорів. IoT-клієнт зчитує необроблені показники сенсорів і нормалізує їх переводячи у відсоткові значення. Щоб обчислити рівень заповнення необхідно (заповнений об’єм/максимальний об’єм) × 100%. Температура та вологість перевіряються на відповідність допустимим межам.
-	Автоматичне періодичне оновлення. IoT-клієнт передає дані на сервер із фіксованим інтервалом часу в 10 хвилин або за події, наприклад, досягнення критичного рівня заповнення, критичної температури або вологості. У разі відсутності значних змін, визначених локальною фільтрацією даних, передача інформації не виконується. 
3.1.3	Веб-клієнт
Веб-клієнт надасть розширений функціонал для користувачів та адміністраторів через браузер. Його функціональність включатиме:
-	Інтерактивне відображення стану контейнерів з позначенням рівня їхнього заповнення, температури та вологості.
-	Можливість фільтрувати контейнери за типом відходів.
-	Забезпечення пошуку контейнерів за адресою для швидкого доступу до необхідної інформації.
-	Надання користувачам інструкцій щодо правильного сортування сміття у форматі тексту та зображень.
-	Фільтрація правил за типом сміття, щоб користувачі могли швидко знайти відповідні рекомендації.
-	Пошук правил за ключовим словом, наприклад “пляшка” чи  “папір”.
-	Інструменти для адміністратора, до яких входить: додавання, редагування чи видалення інформації про контейнери, внесення змін до правил сортування сміття, доступ до панелі адміністрування з розмежуванням прав доступу.
3.1.4	Мобільний клієнт
Мобільний клієнт включатиме:
-	Інформування користувачів шляхом надсилання сповіщень про необхідність вивозу сміття.
-	Інтеграція з геолокацією. Визначення найближчих контейнерів за місцезнаходженням користувача.

3.2. Scope of Subsequent Releases
У наступних версіях продукту планується реалізувати розширення функціоналу, яке включатиме:
-	Оптимізація маршрутів вивезення сміття. Побудова маршрутів для сміттєвозів на основі стану контейнерів, щоб зменшити витрати пального та підвищити ефективність логістики.
-	Підтримка офлайн режиму IoT-клієнтів, щоб у разі втрати з’єднання дані зберігалися локально та передавалися на сервер після відновлення доступу.
У наступних версіях також планується впровадження інтелектуальних функцій на базі штучного інтелекту, що значно розширить можливості системи:
-	Прогнозування заповнення контейнерів на основі історичних даних, що дасть змогу оптимізувати графіки вивезення відходів.
-	Розпізнавання типу сміття на основі фотографій, зроблених користувачами. Це дозволить автоматично надавати рекомендації щодо сортування.

3.3 Limitation and Exclusions
Незважаючи на функціональну гнучкість системи, існують обмеження, які необхідно враховувати при впровадженні рішення, а саме:
-	На першому етапі система підтримує лише сенсори рівня заповнення, температури та вологості, протестовані на сумісність.
-	Підключення самостійно змінених або нетипових IoT-пристроїв може призвести до нестабільної роботи або повної відсутності підтримки.
-	У разі несправності сенсора, втрати живлення або нестабільного інтернет-з’єднання, система не гарантує актуальність показників або цілісність даних.
-	Надмірна вологість, температура або механічні пошкодження можуть впливати на точність вимірювань.
-	Автоматичне розпізнавання сміття за фото відсутнє у першому релізі, бо потребує додаткових даних для навчання моделей та складної інфраструктури.
-	Підтримка iOS у мобільному застосунку наразі не передбачена, зосередження відбувається на платформі Android через обмеженість ресурсів.

4 BUSINESS CONTEXT
4.3. Operating Environment
Для створення програмної системи автоматизації процесу сортування сміття будуть використані наступні програмні засоби:
-	Серверна частина буде створена за допомогою ASP.NET Core на мові програмування C#. Для збереження даних буде використовуватися PostgreSQL.
-	Дані з сенсорів будуть оброблятися програмним забезпечення, написаним на C#.
-	Веб-клієнт буде реалізований за допомогою фреймворку React та буде використано HTML та CSS для створення структури та стилізації інтерфейсу, а також JavaScript для забезпечення інтерактивності.
-	Мобільний клієнт буде створений на основі фреймворку .NET MAUI, що дозволить розробити застосунок на мові програмування C# для платформи Android.
